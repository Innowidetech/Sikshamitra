const express = require('express');

const { editSchool, createSchool, createTeacher, createStudentAndParent, getAllTeachersOfSchool, getAllStudentsOfSchool, getAllParentsOfSchool, getStudentsIsActiveRatio, getStudentsRatio, updateStudentData, updateTeacherData, getProfile, newAdmission, createBook, deleteBook, getBooks, numberOfSPT, getStudentById, createNotice, getNotice, deleteNotice, addStudentToExistingParent, createClass, editClass, createDynamicCalendar, getClasses, getDynamicCalendar, getDynamicCalendarByDate, createClassWiseFees, getClassWiseFees, editClassWiseFees, getUpdatedStudentData, addStock, getInventory, saleStockTo, getSaleStock, getLibraryData, addEmployee, getEmployees, editEmployee, createAimObjective, getAimObjective, deleteAimObjective, getTeacherNames, updateAandLBody, updateAandLParams, postSchoolExpensesForm, getTeacherItemRequest, updateTeacherItemRequest, getAccounts, getAccountsData } = require('../controllers/admin.controller');
const { protect, authorize } = require('../middleware/auth.middleware');
const { getResults, getSyllabus, getExams } = require('../controllers/teacher.controller');
const multer = require('multer');
const upload = multer({ storage: multer.memoryStorage() });
const router = express.Router();

router.get('/getProfile', protect, authorize('admin'), getProfile);
router.post('/create-school', protect, authorize('admin'), upload.fields([{ name: 'logo', maxCount: 1 }, { name: 'banner', maxCount: 1 }]), createSchool);
router.put('/edit', protect, authorize('admin'), upload.fields([{ name: 'logo', maxCount: 1 }, { name: 'banner', maxCount: 1 }]), editSchool);
router.post('/class', protect, authorize('admin'), createClass);
router.patch('/class/:classId', protect, authorize('admin'), editClass);
router.get('/classes', protect, authorize('admin'), getClasses);
router.post('/classwisefees', protect, authorize('admin'), createClassWiseFees);
router.get('/classwisefees', protect, authorize('admin'), getClassWiseFees);
router.put('/classwisefees/:classWiseFessId', protect, authorize('admin'), editClassWiseFees);
router.get('/count',protect,authorize('admin'), numberOfSPT);
router.get('/students/isActive', protect, authorize('admin'), getStudentsIsActiveRatio);
router.get('/students/gender', protect, authorize('admin'), getStudentsRatio);
router.post('/notice', protect,authorize('admin'),createNotice);
router.get('/notice', protect, authorize('admin'),getNotice);
router.delete('/notice/:noticeId',protect, authorize('admin'), deleteNotice);
router.post('/calendar', protect, authorize('admin'), createDynamicCalendar);
router.get('/calendar', protect, authorize('admin'), getDynamicCalendar);
router.get('/calendar/:calendarDate', protect, authorize('admin'), getDynamicCalendarByDate);
router.post('/register', protect, authorize('admin'), upload.single('photo'), createTeacher);
router.get('/teacherNames', protect, authorize('admin'), getTeacherNames);
router.post('/authorityb', protect, authorize('admin'), updateAandLBody);
// router.post('/authorityp/:employeeType/:action/:position?', protect, authorize('admin'), updateAandLParams);
router.post('/teacher/:teacherId', protect, authorize('admin'), updateTeacherData);
router.get('/teachers', protect, authorize('admin'), getAllTeachersOfSchool);
router.post('/registersp', protect, authorize('admin'), upload.single('photo'), createStudentAndParent);
router.post('/addStudent', protect, authorize('admin'),upload.single('photo'), addStudentToExistingParent);
router.get('/students', protect, authorize('admin'), getAllStudentsOfSchool);
router.get('/student/:studentId',protect, authorize('admin'), getStudentById);
router.post('/student/:studentId', protect, authorize('admin'), updateStudentData);
router.get('/updatedStudentData/:studentId', protect, authorize('admin'), getUpdatedStudentData);
router.get('/parents', protect, authorize('admin'), getAllParentsOfSchool);
router.post('/inventory/add', protect, authorize('admin'), addStock);
router.get('/inventory', protect, authorize('admin'), getInventory);
router.post('/inventory/sale', protect, authorize('admin'), saleStockTo);
router.get('/inventory/sale', protect, authorize('admin'), getSaleStock);
router.get('/syllabus', protect, authorize('admin'), getSyllabus);
router.get('/newAdmission', protect, authorize('admin'), newAdmission);
router.post('/employee', protect, authorize('admin'), addEmployee);
router.get('/employee', protect, authorize('admin'), getEmployees);
router.patch('/employee/:employeeId', protect, authorize('admin'), editEmployee);
router.post('/aimobjective', protect, authorize('admin'), createAimObjective);
router.get('/aimobjective', protect, authorize('admin'), getAimObjective);
router.delete('/aimobjective/:aimobjectiveId', protect, authorize('admin'), deleteAimObjective);
router.post('/createBook', protect, authorize('admin'), upload.single('photo'), createBook);
router.get('/books',protect,authorize('admin'),getBooks);
router.get('/library', protect, authorize('admin'), getLibraryData);
router.delete('/book/:bookId', protect,authorize('admin'), deleteBook);
router.get('/exams', protect, authorize('admin'), getExams);
router.get('/results',protect, authorize('admin'), getResults);
router.post('/expenses', protect, authorize('admin'), postSchoolExpensesForm);
router.get('/classRequest', protect, authorize('admin'), getTeacherItemRequest);
router.patch('/classRequest/:requestId', protect, authorize('admin'), updateTeacherItemRequest);
router.get('/accounts',protect, authorize('admin'), getAccounts);
router.get('/accountsData',protect, authorize('admin'), getAccountsData);


    
module.exports = router;
